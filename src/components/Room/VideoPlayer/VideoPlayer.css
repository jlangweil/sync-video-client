/* Add these CSS rules to your VideoPlayer.css file */

/* Seeking overlay for host */
.seeking-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 50;
}

.seeking-message {
  background-color: rgba(44, 62, 80, 0.9);
  padding: 20px 30px;
  border-radius: 8px;
  text-align: center;
  color: white;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.seeking-spinner,
.reconnection-spinner {
  width: 40px;
  height: 40px;
  border: 4px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  border-top-color: #3498db;
  animation: spin 1s ease-in-out infinite;
  margin-bottom: 15px;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

.seeking-message p {
  margin: 5px 0;
  font-size: 16px;
}

.seeking-message .small {
  font-size: 14px;
  opacity: 0.8;
  margin-top: 8px;
}

/* Reconnection overlay for viewers */
.reconnection-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 50;
}

.reconnection-message {
  background-color: rgba(231, 76, 60, 0.9);
  padding: 20px 30px;
  border-radius: 8px;
  text-align: center;
  color: white;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.status-time {
  font-size: 12px;
  opacity: 0.7;
  margin-top: 10px;
}

.refresh-button {
  background-color: white;
  color: #e74c3c;
  border: none;
  padding: 8px 16px;
  border-radius: 4px;
  font-weight: bold;
  margin-top: 15px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.refresh-button:hover {
  background-color: #f5f5f5;
}

/* Enhanced connection status indicators */
.connection-status {
  position: absolute;
  top: 15px;
  left: 15px;
  z-index: 30;
  background-color: rgba(0, 0, 0, 0.7);
  border-radius: 5px;
  padding: 8px 12px;
  transition: background-color 0.3s;
}

.connection-status.disconnected {
  background-color: rgba(231, 76, 60, 0.8);
}

.connection-status.reconnecting {
  background-color: rgba(243, 156, 18, 0.8);
  animation: pulse 1s infinite;
}

.status-indicator {
  display: flex;
  align-items: center;
  gap: 8px;
  color: white;
  font-size: 14px;
}

.status-dot {
  width: 10px;
  height: 10px;
  border-radius: 50%;
}

.status-dot.disconnected {
  background-color: #e74c3c;
}

.status-dot.connecting {
  background-color: #f39c12;
  animation: pulse 1s infinite;
}

.status-dot.buffering {
  background-color: #3498db;
  animation: pulse 1s infinite;
}

.status-dot.error {
  background-color: #e74c3c;
  animation: pulse 1s infinite;
}

.status-dot.ready {
  background-color: #2ecc71;
}

/* UPDATED STYLES TO FIX VIDEO CENTERING AND SIZING IN THEATER MODE */

/* Hide theater and fullscreen buttons in theater or fullscreen mode */
.theater-mode .theater-button,
.theater-mode .fullscreen-button,
.theater-mode .video-controls,
.theater-mode .viewer-controls,
.theater-mode button[class*="theater"],
.theater-mode button[class*="fullscreen"] {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  position: absolute !important;
  pointer-events: none !important;
  z-index: -1 !important;
}

/* Center the video in the container - UPDATED FOR PROPER SIZING */
.video-wrapper {
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
  width: 100% !important;
  height: 100% !important;
  position: relative !important;
  margin: 0 auto !important;
}

/* FIXED: Make video take up maximum available space while preserving aspect ratio */
.viewer-video {
  width: 100% !important;
  height: 100% !important;
  max-width: 100% !important;
  max-height: 100% !important;
  object-fit: contain !important;
  margin: 0 auto !important;
  display: block !important;
  position: relative !important;
  z-index: 5 !important;
}

/* FIXED: Theater mode video container should use full available width */
.theater-mode .video-container {
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
  width: 100% !important;
  height: 100vh !important;
  padding: 0 !important;
  margin: 0 !important;
  /* Remove any max-width constraints in theater mode */
  max-width: none !important;
}

/* FIXED: Video wrapper in theater mode should use full available space */
.theater-mode .video-wrapper {
  width: 100% !important;
  height: 100% !important;
  margin: 0 !important;
  padding: 0 !important;
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
  /* Ensure it uses the full width minus sidebar */
  max-width: none !important;
}

/* FIXED: Theater mode video should fill available space optimally */
.theater-mode video,
.theater-mode .viewer-video {
  width: 100% !important;
  height: 100% !important;
  max-width: 100% !important;
  max-height: 100vh !important;
  object-fit: contain !important;
  position: relative !important;
  margin: 0 auto !important;
  display: block !important;
}

/* FIXED: Ensure the main content in theater mode uses proper flex layout */
.theater-mode .main-content {
  display: flex !important;
  flex-direction: row !important;
  width: 100vw !important;
  height: 100vh !important;
  margin: 0 !important;
  padding: 0 !important;
}

/* FIXED: Ensure video container gets proper share of space in theater mode */
.theater-mode .main-content .video-container {
  flex: 1 !important;
  width: auto !important;
  /* Remove any width calculations that might constrain it */
  max-width: none !important;
  min-width: 0 !important;
}

/* Handle any inline specific controls that need to be hidden */
body .theater-mode button[class*="theater"],
body .theater-mode button[class*="fullscreen"],
body .theater-mode .control-button,
body .theater-mode div[class*="control"] {
  display: none !important;
}

/* Higher-specificity fix for Theater Mode button visible in screenshot */
body .theater-mode .theater-mode-button,
body .theater-mode .fullscreen-button,
body .theater-mode *[class*="fullscreen"],
body .theater-mode .video-controls {
  display: none !important;
}

/* Specifically target the buttons on the right side that appear in the screenshot */
.theater-mode button[title="Theater Mode"],
.theater-mode button[title="Fullscreen"],
.theater-mode button[title="Toggle Fullscreen"],
.theater-mode button[title="Enter Theater Mode"] {
  display: none !important;
}

/* Make sure inline styled buttons are hidden */
.theater-mode *[style*="position: absolute"] {
  display: none !important;
}

/* FIXED: Normal mode video container positioning */
.video-container {
  position: relative !important;
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
}

/* For the specific case of stacked buttons on the right */
.theater-mode-button, 
.fullscreen-button {
  display: none !important;
}

/* Target those specific buttons */
#theater_mode_button,
#fullscreen_button {
  display: none !important;
}

/* ADDED: Ensure host video (video element) also gets proper sizing */
.theater-mode .host-video,
.theater-mode video[class*="host"] {
  width: 100% !important;
  height: 100% !important;
  max-width: 100% !important;
  max-height: 100vh !important;
  object-fit: contain !important;
}

/* ADDED: Fix for when video container has inline width styles */
.theater-mode .video-container[style*="width"] {
  width: auto !important;
  flex: 1 !important;
}

/* ADDED: Ensure sidebar doesn't interfere with video sizing in theater mode */
.theater-mode .sidebar {
  flex-shrink: 0 !important;
  width: 300px !important;
  max-width: 300px !important;
}

/* ADDED: Alternative approach - force video to use calc() for available space */
.theater-mode .video-wrapper video {
  width: 100% !important;
  height: 100% !important;
  /* Use calc to account for any potential margins/padding */
  max-width: calc(100vw - 320px) !important; /* Account for sidebar + padding */
  max-height: 100vh !important;
}